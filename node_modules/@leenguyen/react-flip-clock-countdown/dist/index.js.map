{"version":3,"file":"index.js","sources":["../src/FlipClockDigit.tsx","../src/utils.ts","../src/FlipClockCountDown.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport React from 'react';\nimport styles from './styles.module.css';\nimport { Digit, FlipClockCountdownProps } from './types';\n\nexport interface FlipClockDigitProps {\n  current: Digit;\n  next: Digit;\n  className?: string;\n  style?: FlipClockCountdownProps['digitBlockStyle'];\n}\n\ntype FlipClockDigitState = {\n  current: Digit;\n  next: Digit;\n};\n\nexport default function FlipClockDigit(props: FlipClockDigitProps) {\n  const { current, next, className, style } = props;\n  const [digit, setDigit] = React.useState<FlipClockDigitState>({ current, next });\n  const [flipped, setFlipped] = React.useState(false);\n\n  React.useEffect(() => {\n    if (digit.current !== current) {\n      if (digit.current === digit.next) {\n        setDigit({ ...digit, next });\n      }\n      setFlipped(true);\n    } else {\n      setFlipped(false);\n    }\n  }, [current, next]);\n\n  const handleTransitionEnd = (): void => {\n    setDigit({ current, next });\n    setFlipped(false);\n  };\n\n  return (\n    <div className={clsx(styles.fcc__digit_block, className)} style={style}>\n      <div className={styles.fcc__next_above}>{digit.next}</div>\n      <div className={styles.fcc__current_below}>{digit.current}</div>\n      <div className={clsx(styles.fcc__card, { [styles.fcc__flipped]: flipped })} onTransitionEnd={handleTransitionEnd}>\n        <div className={clsx(styles.fcc__card_face, styles.fcc__card_face_front)}>{digit.current}</div>\n        <div className={clsx(styles.fcc__card_face, styles.fcc__card_face_back)}>{digit.next}</div>\n      </div>\n    </div>\n  );\n}\n","import { Digit, FlipClockCountdownTimeDelta, FlipClockCountdownTimeDeltaFormatted } from './types';\n\nexport const defaultTimeDelta = {\n  total: 0,\n  days: 0,\n  hours: 0,\n  minutes: 0,\n  seconds: 0\n};\n\nexport function calcTimeDelta(target: Date | number | string): FlipClockCountdownTimeDelta {\n  const date = new Date(target);\n  if (isNaN(date.getTime())) {\n    throw Error('Invalid date');\n  }\n  const now = new Date();\n  let timeLeft = Math.round((date.getTime() - now.getTime()) / 1000); // convert to seconds\n  if (timeLeft < 0) timeLeft = 0;\n\n  return {\n    total: timeLeft,\n    days: Math.floor(timeLeft / (24 * 60 * 60)),\n    hours: Math.floor((timeLeft / 3600) % 24),\n    minutes: Math.floor((timeLeft / 60) % 60),\n    seconds: Math.floor(timeLeft % 60)\n  };\n}\n\nexport function pad(n: number): Digit[] {\n  return ('0'.repeat(Math.max(0, 2 - String(n).length)) + String(n)).split('');\n}\n\nexport function parseTimeDelta(timeDelta: FlipClockCountdownTimeDelta): FlipClockCountdownTimeDeltaFormatted {\n  const nextTimeDelta = calcTimeDelta(new Date().getTime() + (timeDelta.total - 1) * 1000);\n\n  return {\n    days: {\n      current: pad(timeDelta.days),\n      next: pad(nextTimeDelta.days)\n    },\n    hours: {\n      current: pad(timeDelta.hours),\n      next: pad(nextTimeDelta.hours)\n    },\n    minutes: {\n      current: pad(timeDelta.minutes),\n      next: pad(nextTimeDelta.minutes)\n    },\n    seconds: {\n      current: pad(timeDelta.seconds),\n      next: pad(nextTimeDelta.seconds)\n    }\n  };\n}\n\nexport function convertToPx(n?: string | number): string | undefined {\n  if (n === undefined) return undefined;\n  if (typeof n === 'string') return n;\n  return `${n}px`;\n}\n","import styles from './styles.module.css';\n//\nimport clsx from 'clsx';\nimport React from 'react';\nimport FlipClockDigit from './FlipClockDigit';\nimport { FlipClockCountdownProps, FlipClockCountdownState, FlipClockCountdownUnitTimeFormatted } from './types';\nimport { calcTimeDelta, convertToPx, parseTimeDelta } from './utils';\n\nconst defaultRenderMap = [true, true, true, true];\nconst defaultLabels = ['Days', 'Hours', 'Minutes', 'Seconds'];\n\n/**\n * A 3D animated flip clock countdown component for React.\n */\nfunction FlipClockCountdown(props: FlipClockCountdownProps) {\n  const {\n    to,\n    className,\n    style,\n    children,\n    onComplete = () => {},\n    onTick = () => {},\n    showLabels = true,\n    showSeparators = true,\n    labels = defaultLabels,\n    labelStyle,\n    digitBlockStyle,\n    separatorStyle,\n    dividerStyle,\n    duration = 0.7,\n    renderMap = defaultRenderMap,\n    hideOnComplete = true,\n    ...other\n  } = props;\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  const [state, setState] = React.useState<FlipClockCountdownState>(constructState);\n  const countdownRef = React.useRef(0);\n\n  function clearTimer() {\n    window.clearInterval(countdownRef.current);\n  }\n\n  function constructState(): FlipClockCountdownState {\n    const timeDelta = calcTimeDelta(to);\n    return {\n      timeDelta,\n      completed: timeDelta.total === 0\n    };\n  }\n\n  function tick() {\n    const newState = constructState();\n    setState(newState);\n    onTick(newState);\n    if (newState.completed) {\n      clearTimer();\n      onComplete();\n    }\n  }\n\n  React.useEffect(() => {\n    // setState(constructState());\n    clearTimer();\n    countdownRef.current = window.setInterval(tick, 1000);\n\n    return () => clearTimer();\n  }, [to]);\n\n  const containerStyles = React.useMemo<React.CSSProperties>(() => {\n    const s = {\n      '--fcc-flip-duration': `${duration}s`,\n      '--fcc-digit-block-width': convertToPx(digitBlockStyle?.width),\n      '--fcc-digit-block-height': convertToPx(digitBlockStyle?.height),\n      '--fcc-shadow': digitBlockStyle?.boxShadow,\n      '--fcc-digit-font-size': convertToPx(digitBlockStyle?.fontSize),\n      '--fcc-digit-color': digitBlockStyle?.color,\n      '--fcc-label-font-size': convertToPx(labelStyle?.fontSize),\n      '--fcc-label-color': labelStyle?.color,\n      '--fcc-divider-color': dividerStyle?.color,\n      '--fcc-divider-height': convertToPx(dividerStyle?.height),\n      '--fcc-background': digitBlockStyle?.background || digitBlockStyle?.backgroundColor,\n      '--fcc-separator-size': convertToPx(separatorStyle?.size),\n      '--fcc-separator-color': showSeparators ? separatorStyle?.color : 'transparent',\n      ...style\n    };\n\n    return s;\n  }, [style, digitBlockStyle, labelStyle, duration, dividerStyle, separatorStyle, showSeparators]);\n\n  const _digitBlockStyle = React.useMemo(() => {\n    if (digitBlockStyle) {\n      return {\n        ...digitBlockStyle,\n        background: undefined,\n        backgroundColor: undefined,\n        width: undefined,\n        height: undefined,\n        boxShadow: undefined,\n        fontSize: undefined,\n        color: undefined\n      };\n    }\n    return undefined;\n  }, [digitBlockStyle]);\n\n  const sections = React.useMemo(() => {\n    const formatted = parseTimeDelta(state.timeDelta);\n    const _renderMap = renderMap.length >= 4 ? renderMap.slice(0, 4) : defaultRenderMap;\n    const _labels = labels.length >= 4 ? labels.slice(0, 4) : defaultLabels;\n    const times = Object.values(formatted) as FlipClockCountdownUnitTimeFormatted[];\n    const r: [FlipClockCountdownUnitTimeFormatted, string][] = [];\n    _renderMap.forEach((show, i) => {\n      if (show) {\n        r.push([times[i], _labels[i]]);\n      }\n    });\n    return r;\n  }, [renderMap, state]);\n\n  if (state?.completed && hideOnComplete) {\n    return <React.Fragment>{children}</React.Fragment>;\n  }\n\n  return (\n    <div\n      {...other}\n      className={clsx(\n        styles.fcc__container,\n        {\n          [styles.fcc__label_show]: showLabels\n        },\n        className\n      )}\n      style={containerStyles}\n      data-testid='fcc-container'\n    >\n      {sections.map(([item, label], idx) => {\n        return (\n          <React.Fragment key={`digit-block-${idx}`}>\n            <div className={styles.fcc__digit_block_container}>\n              {showLabels && (\n                <div className={styles.fcc__digit_block_label} style={labelStyle}>\n                  {label}\n                </div>\n              )}\n              {item.current.map((cItem, cIdx) => (\n                <FlipClockDigit key={cIdx} current={cItem} next={item.next[cIdx]} style={_digitBlockStyle} />\n              ))}\n            </div>\n            {idx < sections.length - 1 && <div className={styles.fcc__colon}></div>}\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FlipClockCountdown;\n"],"names":["FlipClockDigit","props","current","next","className","style","_React$useState","React","useState","digit","setDigit","_React$useState2","flipped","setFlipped","useEffect","_extends","clsx","_clsx","onTransitionEnd","calcTimeDelta","target","date","Date","isNaN","getTime","Error","now","timeLeft","Math","round","total","days","floor","hours","minutes","seconds","pad","n","repeat","max","String","length","split","convertToPx","undefined","defaultRenderMap","defaultLabels","to","children","_props$onComplete","onComplete","_props$onTick","onTick","_props$showLabels","showLabels","_props$showSeparators","showSeparators","_props$labels","labels","labelStyle","digitBlockStyle","separatorStyle","dividerStyle","_props$duration","duration","_props$renderMap","renderMap","_props$hideOnComplete","hideOnComplete","other","_objectWithoutPropertiesLoose","_excluded","constructState","state","setState","countdownRef","useRef","clearTimer","window","clearInterval","timeDelta","completed","tick","newState","setInterval","containerStyles","useMemo","--fcc-flip-duration","--fcc-digit-block-width","width","--fcc-digit-block-height","height","--fcc-shadow","boxShadow","--fcc-digit-font-size","fontSize","--fcc-digit-color","color","--fcc-label-font-size","--fcc-label-color","--fcc-divider-color","--fcc-divider-height","--fcc-background","background","backgroundColor","--fcc-separator-size","size","--fcc-separator-color","_digitBlockStyle","sections","nextTimeDelta","formatted","_renderMap","slice","_labels","times","Object","values","r","forEach","show","i","push","Fragment","map","_ref","idx","item","key","cItem","cIdx"],"mappings":"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"}